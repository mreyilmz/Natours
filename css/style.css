/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* after ve before gerçek element olmadıkları için bu şekilde yapıyoruz. */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;

  /* css developerlar biraz daha pratik diye bu şekilde yapıyorlar. Body'de boz-sizing'i border-box'a eşitliyolar */
  box-sizing: inherit;
}

html {
  font-size: 62.5%;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px */
  line-height: 1.7;
  color: #777;
  padding: 3rem;

  box-sizing: border-box;
}

.header {
  height: 95vh;
  background-image: linear-gradient(
      to right bottom,
      rgba(126, 213, 111, 0.801),
      rgba(40, 180, 133, 0.801)
    ),
    url(../img/hero.jpg);
  background-size: cover;
  /* top bottom center gibi seçenekleri var. Pencere küçüldükçe odaklanacağı yeri belirtiyoruz. */
  background-position: top;
  position: relative;

  /* ilk parametre solt üst köşe
      ikinci parametre sağ üst
      üçüncü sağ alt
      dördüncü sol alt */
  clip-path: polygon(0 0, 100% 0, 100% 80%, 0 100%);
}

.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}

/* height otomatik olarak scale olacaktır. width girseydik height otomatik scale olacaktı değişen birşey yok. */
.header__logo {
  height: 3.5rem;
}

.header__logo-box:hover .header__logo {
  animation: moveInRight 3s;
}

.header__text-box {
  position: absolute;
  text-align: center;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  margin-bottom: 6rem;
}

.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;

  /*   animation: name duration timing-function delay iteration-count direction fill-mode */
  /* moveInLeft adında bir animasyon oluşturduk. */
  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;

  /*   animation-delay: 3s;
  animation-iteration-count: 3; */
}

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 400;
  letter-spacing: 1.6rem;
  /*   animation: name duration timing-function; */
  animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }

  80% {
    transform: translateX(1rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }

  80% {
    transform: translateX(-1rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  /* inline-block yapmasaydık butonun sınırları diğer elementlerin üzerine gelecekti. */
  display: inline-block;
  border-radius: 10rem;
  transition: all 0.2s;
  position: relative;
}

.btn:hover {
  transform: translateY(-0.3rem);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
}

/* hover ile active birbirleri üzerine stacklenmez ikisi de butonun default halinden yani .btn:link'ten başlar */
.btn:active {
  transform: translateY(-0.1rem);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
}

.btn--white {
  background-color: #fff;
  color: #777;
}

.btn::after {
  content: "";
  display: inline-block;

  /* butonun child elementi olduğu için % ile butonun ölçülerini aldı. */
  height: 100%;
  width: 100%;

  border-radius: 10rem;
  position: absolute;

  /* buton ile tam hizaya gelmesi için yaptık */
  top: 0;
  left: 0;

  /* butonun arkasına aldık.  */
  z-index: -1;

  transition: all 0.4s;
}

.btn--white::after {
  background-color: #fff;
}

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btn--animated {
  animation: moveInBottom 0.5s ease-out 0.75s;
  animation-fill-mode: backwards;
}
