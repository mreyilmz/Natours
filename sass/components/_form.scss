@use "../abstracts" as *;

.form {
  &__group {
    margin-bottom: 2rem;
  }

  &__input {
    font-size: 1.5rem;

    /* Buton old. için font family'i inherit etmemiz gerekti. */
    font-family: inherit;

    /* Buton old. için color da inherit etmemiz gerekti */
    color: inherit;

    padding: 1.5rem 2rem;
    border-radius: 2px;
    background-color: rgba($color-white, 0.5);
    border: none;

    /* Focusta border bottom koyunca kayma olduğu için initial durumda border koyup transparent yaptık */
    border-bottom: 3px solid transparent;
    width: 90%;
    display: block;
    transition: all 0.3s;

    @include respond(tab-port) {
      width: 100%;
    }

    &:focus {
      outline: none;
      box-shadow: 0 1rem 2rem $color-rgba-small;
      border-bottom: 3px solid $color-primary;
    }

    /* isim veya email invalid durumdaysa alttaki çizfi turuncu olacak */
    &:focus:invalid {
      border-bottom: 3px solid $color-secondary-dark;
    }

    /* placeholder'daki yazının rengini bu şekilde değiştirdik. */
    &::-webkit-input-placeholder {
      color: $color-grey-dark-2;
    }
  }

  &__label {
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 2rem;
    margin-top: 0.7rem;
    display: block;
    transition: all 0.3s;
  }

  /* label input'un child elementi olmadığı için aşağıdaki gibi yaptık. input'tan sonra direkt label geliyorsa aşağıdaki kod çalışır fakat input ile label arasında herhangi bir element veya eelementler varsa çalışmaz. Arada başka elementler varsa '+' yerine '~' kullanırdık. Bu işaret sibling seçiyor. Fakat index.html'de label input'tan önce olsaydı çalışmazdı bu sefer ters yazmamız gerekirdi label + veya ~ input gibi. */
  /* placeholder gözüktüğü zaman label'ı gizledik */
  &__input:placeholder-shown + &__label {
    /* opacity'i transition uygulamak için visibility'i ise kullanıcı opacity'si 0 olan label'a tıkladığı zaman input'a focus olmasın diye kullandık.*/
    opacity: 0;
    visibility: hidden;
    transform: translateY(-4rem);
  }

  &__radio-group {
    width: 49%;
    display: inline-block;

    @include respond(tab-port) {
      margin-bottom: 2rem;
      width: 100%;
    }
  }

  &__radio-input {
    /* Default radio-butonu gizlemek için visibility:hidden veya display:none kullanamadık. Çünkü ikisi başka sorunlar meydana getiriyor. Bu yüzde alttaki property'leri kullandık */
    opacity: 0;
    position: absolute;
    width: 0;
  }

  &__radio-label {
    font-size: $default-font-size;
    cursor: pointer;
    position: relative;
    padding-left: 4.5rem;
  }

  &__radio-button {
    height: 3rem;
    width: 3rem;
    border: 5px solid $color-primary;
    border-radius: 50%;
    display: inline-block;
    position: absolute;
    left: 0;
    top: -0.4rem;

    &::after {
      content: "";
      display: block;
      height: 1.3rem;
      width: 1.3rem;
      border-radius: 50%;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: $color-primary;
      opacity: 0;
      transition: opacity 0.2s;
    }
  }

  /* radio-button'un seçili olduğu durumu :checked ile seçtik. Sonra ononun siblingi olan label'ı seçtik. Sonra label'ın child'ı olan ::after pseudo elementini seçtik. radio buton seçili olduğu zaman ::after elementini görünür yaptık. */
  &__radio-input:checked ~ &__radio-label &__radio-button::after {
    opacity: 1;
  }
}
